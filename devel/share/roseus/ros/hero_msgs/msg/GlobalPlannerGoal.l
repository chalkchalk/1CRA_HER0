;; Auto-generated. Do not edit!


(when (boundp 'hero_msgs::GlobalPlannerGoal)
  (if (not (find-package "HERO_MSGS"))
    (make-package "HERO_MSGS"))
  (shadow 'GlobalPlannerGoal (find-package "HERO_MSGS")))
(unless (find-package "HERO_MSGS::GLOBALPLANNERGOAL")
  (make-package "HERO_MSGS::GLOBALPLANNERGOAL"))

(in-package "ROS")
;;//! \htmlinclude GlobalPlannerGoal.msg.html
(if (not (find-package "GEOMETRY_MSGS"))
  (ros::roseus-add-msgs "geometry_msgs"))


(defclass hero_msgs::GlobalPlannerGoal
  :super ros::object
  :slots (_command _start_specific _start _goal ))

(defmethod hero_msgs::GlobalPlannerGoal
  (:init
   (&key
    ((:command __command) 0)
    ((:start_specific __start_specific) nil)
    ((:start __start) (instance geometry_msgs::PoseStamped :init))
    ((:goal __goal) (instance geometry_msgs::PoseStamped :init))
    )
   (send-super :init)
   (setq _command (round __command))
   (setq _start_specific __start_specific)
   (setq _start __start)
   (setq _goal __goal)
   self)
  (:command
   (&optional __command)
   (if __command (setq _command __command)) _command)
  (:start_specific
   (&optional __start_specific)
   (if __start_specific (setq _start_specific __start_specific)) _start_specific)
  (:start
   (&rest __start)
   (if (keywordp (car __start))
       (send* _start __start)
     (progn
       (if __start (setq _start (car __start)))
       _start)))
  (:goal
   (&rest __goal)
   (if (keywordp (car __goal))
       (send* _goal __goal)
     (progn
       (if __goal (setq _goal (car __goal)))
       _goal)))
  (:serialization-length
   ()
   (+
    ;; int32 _command
    4
    ;; bool _start_specific
    1
    ;; geometry_msgs/PoseStamped _start
    (send _start :serialization-length)
    ;; geometry_msgs/PoseStamped _goal
    (send _goal :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; int32 _command
       (write-long _command s)
     ;; bool _start_specific
       (if _start_specific (write-byte -1 s) (write-byte 0 s))
     ;; geometry_msgs/PoseStamped _start
       (send _start :serialize s)
     ;; geometry_msgs/PoseStamped _goal
       (send _goal :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; int32 _command
     (setq _command (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;; bool _start_specific
     (setq _start_specific (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;; geometry_msgs/PoseStamped _start
     (send _start :deserialize buf ptr-) (incf ptr- (send _start :serialization-length))
   ;; geometry_msgs/PoseStamped _goal
     (send _goal :deserialize buf ptr-) (incf ptr- (send _goal :serialization-length))
   ;;
   self)
  )

(setf (get hero_msgs::GlobalPlannerGoal :md5sum-) "989550e592ae95fe389e96a6250048dc")
(setf (get hero_msgs::GlobalPlannerGoal :datatype-) "hero_msgs/GlobalPlannerGoal")
(setf (get hero_msgs::GlobalPlannerGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
int32 command
bool start_specific
geometry_msgs/PoseStamped start
geometry_msgs/PoseStamped goal



================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :hero_msgs/GlobalPlannerGoal "989550e592ae95fe389e96a6250048dc")


