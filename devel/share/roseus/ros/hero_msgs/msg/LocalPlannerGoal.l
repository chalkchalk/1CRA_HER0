;; Auto-generated. Do not edit!


(when (boundp 'hero_msgs::LocalPlannerGoal)
  (if (not (find-package "HERO_MSGS"))
    (make-package "HERO_MSGS"))
  (shadow 'LocalPlannerGoal (find-package "HERO_MSGS")))
(unless (find-package "HERO_MSGS::LOCALPLANNERGOAL")
  (make-package "HERO_MSGS::LOCALPLANNERGOAL"))

(in-package "ROS")
;;//! \htmlinclude LocalPlannerGoal.msg.html
(if (not (find-package "NAV_MSGS"))
  (ros::roseus-add-msgs "nav_msgs"))


(defclass hero_msgs::LocalPlannerGoal
  :super ros::object
  :slots (_route ))

(defmethod hero_msgs::LocalPlannerGoal
  (:init
   (&key
    ((:route __route) (instance nav_msgs::Path :init))
    )
   (send-super :init)
   (setq _route __route)
   self)
  (:route
   (&rest __route)
   (if (keywordp (car __route))
       (send* _route __route)
     (progn
       (if __route (setq _route (car __route)))
       _route)))
  (:serialization-length
   ()
   (+
    ;; nav_msgs/Path _route
    (send _route :serialization-length)
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; nav_msgs/Path _route
       (send _route :serialize s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; nav_msgs/Path _route
     (send _route :deserialize buf ptr-) (incf ptr- (send _route :serialization-length))
   ;;
   self)
  )

(setf (get hero_msgs::LocalPlannerGoal :md5sum-) "c9406e3970e812deed30e863deddb6d6")
(setf (get hero_msgs::LocalPlannerGoal :datatype-) "hero_msgs/LocalPlannerGoal")
(setf (get hero_msgs::LocalPlannerGoal :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#goal definition
nav_msgs/Path route

================================================================================
MSG: nav_msgs/Path
#An array of poses that represents a Path for a robot to follow
Header header
geometry_msgs/PoseStamped[] poses

================================================================================
MSG: std_msgs/Header
# Standard metadata for higher-level stamped data types.
# This is generally used to communicate timestamped data 
# in a particular coordinate frame.
# 
# sequence ID: consecutively increasing ID 
uint32 seq
#Two-integer timestamp that is expressed as:
# * stamp.sec: seconds (stamp_secs) since epoch (in Python the variable is called 'secs')
# * stamp.nsec: nanoseconds since stamp_secs (in Python the variable is called 'nsecs')
# time-handling sugar is provided by the client library
time stamp
#Frame this data is associated with
# 0: no frame
# 1: global frame
string frame_id

================================================================================
MSG: geometry_msgs/PoseStamped
# A Pose with reference coordinate frame and timestamp
Header header
Pose pose

================================================================================
MSG: geometry_msgs/Pose
# A representation of pose in free space, composed of position and orientation. 
Point position
Quaternion orientation

================================================================================
MSG: geometry_msgs/Point
# This contains the position of a point in free space
float64 x
float64 y
float64 z

================================================================================
MSG: geometry_msgs/Quaternion
# This represents an orientation in free space in quaternion form.

float64 x
float64 y
float64 z
float64 w

")



(provide :hero_msgs/LocalPlannerGoal "c9406e3970e812deed30e863deddb6d6")


